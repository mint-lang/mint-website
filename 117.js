import {createElement as A,fragment as B} from "./runtime.js";export const a=A(B,{},[A('h1',{},[`Equality`]),A('p',{},[`In Mint, two objects are considered equal if they have the same type and`,`
`,`all its values are equal. The equality operator is: `,A('code',{},[`==`])]),A('pre',{},[A('code',{class:"language-mint"},[A('span',{class:"line"},[`{ `,A('span',{class:"variable"},[`name`]),`: `,A('span',{class:"string"},[`"Jon Doe"`]),`, `,A('span',{class:"variable"},[`age`]),`: `,A('span',{class:"number"},[`27`]),` } `,A('span',{class:"operator"},[`==`]),` { `,A('span',{class:"variable"},[`age`]),`: `,A('span',{class:"number"},[`27`]),`, `,A('span',{class:"variable"},[`name`]),`: `,A('span',{class:"string"},[`"Jon Doe"`]),` } `,A('span',{class:"comment"},[`/* true */`]),`
`]),A('span',{class:"line"},[``,A('span',{class:"type"},[`Maybe`]),`.`,A('span',{class:"type"},[`Just`]),`(`,A('span',{class:"string"},[`"A"`]),`) `,A('span',{class:"operator"},[`==`]),` `,A('span',{class:"type"},[`Maybe`]),`.`,A('span',{class:"type"},[`Just`]),`(`,A('span',{class:"string"},[`"A"`]),`) `,A('span',{class:"comment"},[`/* true */`]),`
`]),A('span',{class:"line"},[`[`,A('span',{class:"string"},[`"A"`]),`] `,A('span',{class:"operator"},[`==`]),` [`,A('span',{class:"string"},[`"A"`]),`] `,A('span',{class:"comment"},[`/* true */`])])])]),A('p',{},[`In JavaScript, the same `,A('code',{},[`==`]),` operator would return `,A('code',{},[`false`]),`. We say Mint`,`
`,`uses `,A('strong',{},[A('em',{},[`structural`])]),` equality.`]),A('p',{},[`In addition to `,A('strong',{},[`custom types`]),`, the following types use structural`,`
`,`equality: `,A('code',{},[`SearchParams`]),`, `,A('code',{},[`FormData`]),`, `,A('code',{},[`Result`]),`, `,A('code',{},[`String`]),`, `,A('code',{},[`Number`]),`, `,A('code',{},[`Array`]),`,`,`
`,A('code',{},[`Maybe`]),`, `,A('code',{},[`Bool`]),`, `,A('code',{},[`Date`]),`, `,A('code',{},[`Map`]),` and `,A('code',{},[`Set`]),`.`]),A('blockquote',{},[A('p',{},[`Types that dp not implement the structural equality operation fall back`,`
`,`to using the JavaScript strict equality operator `,A('code',{},[`===`])])])]),b=a;export default b;