import {createElement as A,fragment as B} from "./runtime.js";export const a=A(B,{},[A('h1',{},[`Ls Websocket`]),A('p',{},[`The `,A('code',{},[`ls-websocket`]),` tool starts the language server over an WebSocket server`,`
`,`so browsers can connect to it and use it to show an editor in a web page.`]),A('pre',{},[A('code',{},[A('span',{class:"line"},[`➔ mint tool ls-websocket`]),A('span',{class:"line"},[`Mint - Running language server over websocket`]),A('span',{class:"line"},[`━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━`]),A('span',{class:"line"},[`⚙ Language server started on http://0.0.0.0:3004/`])])]),A('p',{},[`Every connection has it`,`'`,`s own separate language server process.`]),A('h2',{},[`Sandbox Mode`]),A('p',{},[`The server can be started in a sandbox mode which means that every`,`
`,`websocket connection will create a temporary directory and use it as the`,`
`,`workspace. The directory is deleted after the connection is closed.`]),A('p',{},[`This is used to serve the tutorial and sandboxes for this website.`]),A('h2',{},[`Help`]),A('pre',{},[A('code',{class:"language-bash"},[A('span',{class:"line"},[`➔ mint tool ls-websocket --help`]),A('span',{class:"line"},[`Usage:`]),A('span',{class:"line"},[`  mint tool ls-websocket [flags...] [arg...]`]),A('span',{class:"line"},[``]),A('span',{class:"line"},[`Starts the language server (websocket server).`]),A('span',{class:"line"},[``]),A('span',{class:"line"},[`Flags:`]),A('span',{class:"line"},[`  --help                                               # Displays help for the current command.`]),A('span',{class:"line"},[`  --host, -h (default: ENV["HOST"]? || "0.0.0.0")      # The host to serve the application on.`]),A('span',{class:"line"},[`  --port, -p (default: (ENV["PORT"]? || "3004").to_i)  # The port to serve the application on.`]),A('span',{class:"line"},[`  --sandbox                                            # If specified, server will start in sandbox mode.`])])])]),b=a;export default b;