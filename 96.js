import {a} from "./97.js";export const b=a(`[{"k":10,"e":[{"k":0,"b":false,"t":"<span class=\\"type\\">String</span>","n":"color"},{"k":0,"b":false,"t":"<span class=\\"type\\">String</span>","n":"text"}],"d":"<p>A shade for an item in a color palette. This consist of a color and a</p>","l":"ColorPalette.Shade(type)","n":"ColorPalette.Shade"},{"k":10,"e":[{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s900"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s800"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s700"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s600"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s500"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s400"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s300"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s200"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s100"},{"k":0,"b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"s50"},{"k":0,"b":false,"t":"<span class=\\"type\\">Number</span>","n":"saturation"},{"k":0,"b":false,"t":"<span class=\\"type\\">Number</span>","n":"lightness"},{"k":0,"b":false,"t":"<span class=\\"type\\">Number</span>","n":"hue"}],"d":"<p>A color palette for a color.</p>","l":"ColorPalette(type)","n":"ColorPalette"},{"k":10,"e":[{"k":0,"a":[{"n":"Number"},{"n":"Number"},{"n":"Number"},{"n":"Number"}],"d":"<p><a href=\\"https://en.wikipedia.org/wiki/RGBA_color_model\\">RGBA Color Representation</a></p>","b":false,"n":"RGBA"},{"k":0,"a":[{"n":"Number"},{"n":"Number"},{"n":"Number"},{"n":"Number"}],"d":"<p><a href=\\"https://en.wikipedia.org/wiki/HSL_and_HSV\\">HSV Color Representation</a></p>","b":false,"n":"HSVA"},{"k":0,"a":[{"n":"Number"},{"n":"Number"},{"n":"Number"},{"n":"Number"}],"d":"<p><a href=\\"https://en.wikipedia.org/wiki/HSL_and_HSV\\">HSL Color Representation</a></p>","b":false,"n":"HSLA"},{"k":0,"a":[{"n":"Number"},{"n":"Number"},{"n":"Number"},{"n":"Number"}],"d":"<p><a href=\\"https://en.wikipedia.org/wiki/HSL_and_HSV\\">HSI Color Representation</a></p>","b":false,"n":"HSIA"},{"k":0,"a":[{"n":"String"}],"d":"<p><a href=\\"https://en.wikipedia.org/wiki/Web_colors\\">HEX Color Representation</a></p>","b":false,"n":"HEX"}],"d":"<p>Represents a Color.</p>","l":"Color(type)","n":"Color"},{"k":6,"e":[{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns a <code>ColorPalette.Shade</code> from a color, by calulating the</p>","b":false,"t":"<span class=\\"type\\">ColorPalette</span>.<span class=\\"type\\">Shade</span>","n":"shadeFromColor"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"},{"t":"<span class=\\"type\\">Color</span>","n":"background"},{"t":"<span class=\\"type\\">Color</span>","n":"backgroundInverse"}],"d":"<p>Creates a color palette from the given color.</p>","b":true,"t":"<span class=\\"type\\">ColorPalette</span>","n":"fromColor"}],"d":"<p>Functions for creating a color palette.</p>","l":"ColorPalette","n":"ColorPalette"},{"k":6,"e":[{"k":4,"a":[{"t":"<span class=\\"type\\">Number</span>","n":"value"}],"d":"<p>Adjusts the HUE value.</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"adjustHue"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the complementary color wheel of the color.</p>","b":false,"t":"<span class=\\"type\\">Array</span>(<span class=\\"type\\">Color</span>)","n":"complementary"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the split-complementary color wheel of the color.</p>","b":false,"t":"<span class=\\"type\\">Array</span>(<span class=\\"type\\">Color</span>)","n":"splitComplementary"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the analogous color wheel of the color.</p>","b":false,"t":"<span class=\\"type\\">Array</span>(<span class=\\"type\\">Color</span>)","n":"analogous"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the triadic color wheel of the color.</p>","b":false,"t":"<span class=\\"type\\">Array</span>(<span class=\\"type\\">Color</span>)","n":"triadic"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the tetradic color wheel of the color.</p>","b":false,"t":"<span class=\\"type\\">Array</span>(<span class=\\"type\\">Color</span>)","n":"tetradic"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the monochromatic color wheel of the color.</p>","b":false,"t":"<span class=\\"type\\">Array</span>(<span class=\\"type\\">Color</span>)","n":"monochromatic"}],"d":"<p>A module for creating color wheels.</p>","l":"ColorWheel","n":"ColorWheel"},{"k":6,"e":[{"k":4,"a":[{"t":"<span class=\\"type\\">Number</span>","n":"number"},{"t":"<span class=\\"type\\">Number</span>","n":"decimals"}],"d":"<p>Returns the value of a number rounded to the nearest integer.</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"roundTo"}],"l":"Math","n":"Math"},{"k":6,"e":[{"k":4,"a":[{"t":"<span class=\\"type\\">String</span>","n":"value"}],"d":"<p>Generates a color from a string.</p>","b":false,"t":"<span class=\\"type\\">String</span>","n":"colorOfString"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"background"},{"t":"<span class=\\"type\\">Color</span>","n":"text"}],"d":"<p>Calculates the color contrast ratio between two colors (1 to 21).</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"contrastRatio"},{"k":4,"a":[{"t":"<span class=\\"type\\">String</span>","n":"value"}],"d":"<p>Creates a color from a HEX string.</p>","b":false,"t":"<span class=\\"type\\">Maybe</span>(<span class=\\"type\\">Color</span>)","n":"fromHEX"},{"k":4,"a":[{"t":"<span class=\\"type\\">Number</span>","n":"hue"},{"t":"<span class=\\"type\\">Number</span>","n":"saturation"},{"t":"<span class=\\"type\\">Number</span>","n":"value"},{"t":"<span class=\\"type\\">Number</span>","n":"alpha"}],"d":"<p>Creates a color from hue, saturation, value and alpha parts.</p>","b":true,"t":"<span class=\\"type\\">Color</span>","n":"fromHSVA"},{"k":4,"a":[{"t":"<span class=\\"type\\">Number</span>","n":"red"},{"t":"<span class=\\"type\\">Number</span>","n":"green"},{"t":"<span class=\\"type\\">Number</span>","n":"blue"},{"t":"<span class=\\"type\\">Number</span>","n":"alpha"}],"d":"<p>Creates a color from red, green, blue and alpha parts.</p>","b":true,"t":"<span class=\\"type\\">Color</span>","n":"fromRGBA"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the alpha value of the color.</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"getAlpha"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the brightness of the given color base on the</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"getBrightness"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the hue of the color.</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"getHue"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the saturation of the color.</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"getSaturation"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the value of the color.</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"getValue"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"},{"t":"<span class=\\"type\\">Number</span>","n":"ratio"}],"d":"<p>Makes the color lighter using the given ratio.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"lighten"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color1"},{"t":"<span class=\\"type\\">Color</span>","n":"color2"},{"t":"<span class=\\"type\\">Number</span>","n":"weight"}],"d":"<p>Mixes two given colors using the given weight (0..1).</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"mix"},{"k":4,"d":"<p>Generates a random color.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"random"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the readable text color (white or black) based on</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"readableTextColor"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Calculates the relative luminance of a color.</p>","b":false,"t":"<span class=\\"type\\">Number</span>","n":"relativeLuminance"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"},{"t":"<span class=\\"type\\">Number</span>","n":"alpha"}],"d":"<p>Sets the alpha to the given value of the given color.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"setAlpha"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"},{"t":"<span class=\\"type\\">Number</span>","n":"hue"}],"d":"<p>Sets the hue to the given value of the given color.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"setHue"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"},{"t":"<span class=\\"type\\">Number</span>","n":"lightness"}],"d":"<p>Sets the lightness to the given value of the given color.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"setLightness"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"},{"t":"<span class=\\"type\\">Number</span>","n":"saturation"}],"d":"<p>Sets the saturation to the given value of the given color.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"setSaturation"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"},{"t":"<span class=\\"type\\">Number</span>","n":"value"}],"d":"<p>Sets the value to the given value of the given color.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"setValue"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the CSS HSLA representation of the color.</p>","b":false,"t":"<span class=\\"type\\">String</span>","n":"toCSSHSLA"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Converts the given color to the CSS HEX representation.</p>","b":false,"t":"<span class=\\"type\\">String</span>","n":"toCSSHex"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Converts the given color to the CSS RGBA representation.</p>","b":false,"t":"<span class=\\"type\\">String</span>","n":"toCSSRGBA"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the CSS Percent RGBA representation of the color.</p>","b":false,"t":"<span class=\\"type\\">String</span>","n":"toCSSRGBAPercent"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Converts the internal representation of the color to HEX.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"toHEX"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Converts the internal representation of the color to HSIA.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"toHSIA"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Converts the internal representation of the color to HSLA.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"toHSLA"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the given color as a HSLA tuple.</p>","b":true,"t":"<span class=\\"type\\">Tuple</span>(<span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>)","n":"toHSLATuple"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Converts the internal representation of the color to HSVA.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"toHSVA"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Converts the internal representation of the color to RGBA.</p>","b":false,"t":"<span class=\\"type\\">Color</span>","n":"toRGBA"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the the color as an Percent RGBA tuple (0..1).</p>","b":true,"t":"<span class=\\"type\\">Tuple</span>(<span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>)","n":"toRGBAPercentTuple"},{"k":4,"a":[{"t":"<span class=\\"type\\">Color</span>","n":"color"}],"d":"<p>Returns the given color as an RGBA tuple.</p>","b":true,"t":"<span class=\\"type\\">Tuple</span>(<span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>, <span class=\\"type\\">Number</span>)","n":"toRGBATuple"},{"k":5,"d":"<p>A regexp to detect HEX color values.</p>","v":"<span class=\\"type\\">Regexp</span>.<span class=\\"variable\\">create</span>(<span class=\\"string\\">&quot;^[0-9A-Fa-f]+$&quot;</span>)","b":false,"n":"HEX_REGEXP"}],"d":"<p>Functions to create and manipulate colors.</p>","l":"Color","n":"Color"}]`);export default b;