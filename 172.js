import {createElement as A,fragment as B} from "./runtime.js";export const a=A(B,{},[A('h1',{},[`Lint`]),A('p',{},[`The `,A('code',{},[`lint`]),` command reports syntax and type checking errors for the projects`,`
`,`files. The exit code is `,A('code',{},[`1`]),` if there are errors or `,A('code',{},[`0`]),` if there are no`,`
`,`errors.`]),A('pre',{},[A('code',{class:"language-bash"},[A('span',{class:"line"},[`➔ mint lint`]),A('span',{class:"line"},[`Mint - Linting`]),A('span',{class:"line"},[`━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━`]),A('span',{class:"line"},[`No errors were detected!`]),A('span',{class:"line"},[`━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━`]),A('span',{class:"line"},[`All done in 169.133ms!`])])]),A('h2',{},[`JSON output`]),A('p',{},[`It`,`'`,`s possible to generate an array of errors as JSON using the `,A('code',{},[`--json`]),`
`,`flag.`]),A('h2',{},[`Help`]),A('pre',{},[A('code',{class:"language-bash"},[A('span',{class:"line"},[`➔ mint lint --help`]),A('span',{class:"line"},[`Usage:`]),A('span',{class:"line"},[`  mint lint [flags...] [arg...]`]),A('span',{class:"line"},[``]),A('span',{class:"line"},[`Lints the project for syntax and type errors.`]),A('span',{class:"line"},[``]),A('span',{class:"line"},[`Flags:`]),A('span',{class:"line"},[`  --help  # Displays help for the current command.`]),A('span',{class:"line"},[`  --json  # Output errors in a JSON format.`])])])]),b=a;export default b;